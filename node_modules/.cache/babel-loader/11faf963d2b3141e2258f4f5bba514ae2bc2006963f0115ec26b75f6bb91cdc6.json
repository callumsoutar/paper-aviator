{"ast":null,"code":"import initialStaff from '../data/initial-data/staff.json';\nimport initialAircraft from '../data/initial-data/aircraft.json';\nimport initialMembers from '../data/initial-data/members.json';\nimport initialBookings from '../data/initial-data/bookings.json';\nconst STORAGE_KEYS = {\n  STAFF: 'aeroclub_staff',\n  AIRCRAFT: 'aeroclub_aircraft',\n  MEMBERS: 'aeroclub_members',\n  BOOKINGS: 'aeroclub_bookings'\n};\n\n// Initialize data from localStorage or initial data\nconst initializeData = (key, initialData) => {\n  const storedData = localStorage.getItem(key);\n  if (!storedData) {\n    localStorage.setItem(key, JSON.stringify(initialData));\n    return initialData;\n  }\n  return JSON.parse(storedData);\n};\n\n// Generic CRUD operations\nconst getData = key => {\n  return JSON.parse(localStorage.getItem(key));\n};\nconst setData = (key, data) => {\n  localStorage.setItem(key, JSON.stringify(data));\n};\n\n// Staff operations\nexport const getStaff = () => getData(STORAGE_KEYS.STAFF);\nexport const setStaff = staff => setData(STORAGE_KEYS.STAFF, staff);\nexport const updateStaffMember = (id, updates) => {\n  const staff = getStaff();\n  const updatedStaff = staff.map(member => member.id === id ? {\n    ...member,\n    ...updates\n  } : member);\n  setStaff(updatedStaff);\n  return updatedStaff;\n};\n\n// Aircraft operations\nexport const getAircraft = () => getData(STORAGE_KEYS.AIRCRAFT);\nexport const setAircraft = aircraft => setData(STORAGE_KEYS.AIRCRAFT, aircraft);\nexport const updateAircraft = (id, updates) => {\n  const aircraft = getAircraft();\n  const updatedAircraft = aircraft.map(item => item.id === id ? {\n    ...item,\n    ...updates\n  } : item);\n  setAircraft(updatedAircraft);\n  return updatedAircraft;\n};\n\n// Members operations\nexport const getMembers = () => getData(STORAGE_KEYS.MEMBERS);\nexport const setMembers = members => setData(STORAGE_KEYS.MEMBERS, members);\nexport const updateMember = (id, updates) => {\n  const members = getMembers();\n  const updatedMembers = members.map(member => member.id === id ? {\n    ...member,\n    ...updates\n  } : member);\n  setMembers(updatedMembers);\n  return updatedMembers;\n};\n\n// Bookings operations\nexport const getBookings = () => getData(STORAGE_KEYS.BOOKINGS);\nexport const setBookings = bookings => setData(STORAGE_KEYS.BOOKINGS, bookings);\nexport const updateBooking = (id, updates) => {\n  const bookings = getBookings();\n  const updatedBookings = bookings.map(booking => booking.id === id ? {\n    ...booking,\n    ...updates\n  } : booking);\n  setBookings(updatedBookings);\n  return updatedBookings;\n};\n\n// Initialize all data\nexport const initializeDatabase = () => {\n  initializeData(STORAGE_KEYS.STAFF, initialStaff);\n  initializeData(STORAGE_KEYS.AIRCRAFT, initialAircraft);\n  initializeData(STORAGE_KEYS.MEMBERS, initialMembers);\n  initializeData(STORAGE_KEYS.BOOKINGS, initialBookings);\n};","map":{"version":3,"names":["initialStaff","initialAircraft","initialMembers","initialBookings","STORAGE_KEYS","STAFF","AIRCRAFT","MEMBERS","BOOKINGS","initializeData","key","initialData","storedData","localStorage","getItem","setItem","JSON","stringify","parse","getData","setData","data","getStaff","setStaff","staff","updateStaffMember","id","updates","updatedStaff","map","member","getAircraft","setAircraft","aircraft","updateAircraft","updatedAircraft","item","getMembers","setMembers","members","updateMember","updatedMembers","getBookings","setBookings","bookings","updateBooking","updatedBookings","booking","initializeDatabase"],"sources":["C:/Users/GGPC/aeroclub-bookings/src/services/mockDatabase.js"],"sourcesContent":["import initialStaff from '../data/initial-data/staff.json';\r\nimport initialAircraft from '../data/initial-data/aircraft.json';\r\nimport initialMembers from '../data/initial-data/members.json';\r\nimport initialBookings from '../data/initial-data/bookings.json';\r\n\r\nconst STORAGE_KEYS = {\r\n  STAFF: 'aeroclub_staff',\r\n  AIRCRAFT: 'aeroclub_aircraft',\r\n  MEMBERS: 'aeroclub_members',\r\n  BOOKINGS: 'aeroclub_bookings',\r\n};\r\n\r\n// Initialize data from localStorage or initial data\r\nconst initializeData = (key, initialData) => {\r\n  const storedData = localStorage.getItem(key);\r\n  if (!storedData) {\r\n    localStorage.setItem(key, JSON.stringify(initialData));\r\n    return initialData;\r\n  }\r\n  return JSON.parse(storedData);\r\n};\r\n\r\n// Generic CRUD operations\r\nconst getData = (key) => {\r\n  return JSON.parse(localStorage.getItem(key));\r\n};\r\n\r\nconst setData = (key, data) => {\r\n  localStorage.setItem(key, JSON.stringify(data));\r\n};\r\n\r\n// Staff operations\r\nexport const getStaff = () => getData(STORAGE_KEYS.STAFF);\r\nexport const setStaff = (staff) => setData(STORAGE_KEYS.STAFF, staff);\r\nexport const updateStaffMember = (id, updates) => {\r\n  const staff = getStaff();\r\n  const updatedStaff = staff.map(member => \r\n    member.id === id ? { ...member, ...updates } : member\r\n  );\r\n  setStaff(updatedStaff);\r\n  return updatedStaff;\r\n};\r\n\r\n// Aircraft operations\r\nexport const getAircraft = () => getData(STORAGE_KEYS.AIRCRAFT);\r\nexport const setAircraft = (aircraft) => setData(STORAGE_KEYS.AIRCRAFT, aircraft);\r\nexport const updateAircraft = (id, updates) => {\r\n  const aircraft = getAircraft();\r\n  const updatedAircraft = aircraft.map(item => \r\n    item.id === id ? { ...item, ...updates } : item\r\n  );\r\n  setAircraft(updatedAircraft);\r\n  return updatedAircraft;\r\n};\r\n\r\n// Members operations\r\nexport const getMembers = () => getData(STORAGE_KEYS.MEMBERS);\r\nexport const setMembers = (members) => setData(STORAGE_KEYS.MEMBERS, members);\r\nexport const updateMember = (id, updates) => {\r\n  const members = getMembers();\r\n  const updatedMembers = members.map(member => \r\n    member.id === id ? { ...member, ...updates } : member\r\n  );\r\n  setMembers(updatedMembers);\r\n  return updatedMembers;\r\n};\r\n\r\n// Bookings operations\r\nexport const getBookings = () => getData(STORAGE_KEYS.BOOKINGS);\r\nexport const setBookings = (bookings) => setData(STORAGE_KEYS.BOOKINGS, bookings);\r\nexport const updateBooking = (id, updates) => {\r\n  const bookings = getBookings();\r\n  const updatedBookings = bookings.map(booking => \r\n    booking.id === id ? { ...booking, ...updates } : booking\r\n  );\r\n  setBookings(updatedBookings);\r\n  return updatedBookings;\r\n};\r\n\r\n// Initialize all data\r\nexport const initializeDatabase = () => {\r\n  initializeData(STORAGE_KEYS.STAFF, initialStaff);\r\n  initializeData(STORAGE_KEYS.AIRCRAFT, initialAircraft);\r\n  initializeData(STORAGE_KEYS.MEMBERS, initialMembers);\r\n  initializeData(STORAGE_KEYS.BOOKINGS, initialBookings);\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}