{"ast":null,"code":"import _objectSpread from\"C:/Users/GGPC/aeroclub-bookings/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import initialStaff from'../data/initial-data/staff.json';import initialAircraft from'../data/initial-data/aircraft.json';import initialMembers from'../data/initial-data/members.json';import initialBookings from'../data/initial-data/bookings.json';const STORAGE_KEYS={STAFF:'aeroclub_staff',AIRCRAFT:'aeroclub_aircraft',MEMBERS:'aeroclub_members',BOOKINGS:'aeroclub_bookings'};// Initialize data from localStorage or initial data\nconst initializeData=(key,initialData)=>{const storedData=localStorage.getItem(key);if(!storedData){localStorage.setItem(key,JSON.stringify(initialData));return initialData;}return JSON.parse(storedData);};// Generic CRUD operations\nconst getData=key=>{return JSON.parse(localStorage.getItem(key));};const setData=(key,data)=>{localStorage.setItem(key,JSON.stringify(data));};// Staff operations\nexport const getStaff=()=>getData(STORAGE_KEYS.STAFF);export const setStaff=staff=>setData(STORAGE_KEYS.STAFF,staff);export const updateStaffMember=(id,updates)=>{const staff=getStaff();const updatedStaff=staff.map(member=>member.id===id?_objectSpread(_objectSpread({},member),updates):member);setStaff(updatedStaff);return updatedStaff;};// Aircraft operations\nexport const getAircraft=()=>getData(STORAGE_KEYS.AIRCRAFT);export const setAircraft=aircraft=>setData(STORAGE_KEYS.AIRCRAFT,aircraft);export const updateAircraft=(id,updates)=>{const aircraft=getAircraft();const updatedAircraft=aircraft.map(item=>item.id===id?_objectSpread(_objectSpread({},item),updates):item);setAircraft(updatedAircraft);return updatedAircraft;};// Members operations\nexport const getMembers=()=>getData(STORAGE_KEYS.MEMBERS);export const setMembers=members=>setData(STORAGE_KEYS.MEMBERS,members);export const updateMember=(id,updates)=>{const members=getMembers();const updatedMembers=members.map(member=>member.id===id?_objectSpread(_objectSpread({},member),updates):member);setMembers(updatedMembers);return updatedMembers;};// Bookings operations\nexport const getBookings=()=>getData(STORAGE_KEYS.BOOKINGS);export const setBookings=bookings=>setData(STORAGE_KEYS.BOOKINGS,bookings);export const updateBooking=(id,updates)=>{const bookings=getBookings();const updatedBookings=bookings.map(booking=>booking.id===id?_objectSpread(_objectSpread({},booking),updates):booking);setBookings(updatedBookings);return updatedBookings;};// Initialize all data\nexport const initializeDatabase=()=>{initializeData(STORAGE_KEYS.STAFF,initialStaff);initializeData(STORAGE_KEYS.AIRCRAFT,initialAircraft);initializeData(STORAGE_KEYS.MEMBERS,initialMembers);initializeData(STORAGE_KEYS.BOOKINGS,initialBookings);};","map":{"version":3,"names":["initialStaff","initialAircraft","initialMembers","initialBookings","STORAGE_KEYS","STAFF","AIRCRAFT","MEMBERS","BOOKINGS","initializeData","key","initialData","storedData","localStorage","getItem","setItem","JSON","stringify","parse","getData","setData","data","getStaff","setStaff","staff","updateStaffMember","id","updates","updatedStaff","map","member","_objectSpread","getAircraft","setAircraft","aircraft","updateAircraft","updatedAircraft","item","getMembers","setMembers","members","updateMember","updatedMembers","getBookings","setBookings","bookings","updateBooking","updatedBookings","booking","initializeDatabase"],"sources":["C:/Users/GGPC/aeroclub-bookings/src/services/mockDatabase.js"],"sourcesContent":["import initialStaff from '../data/initial-data/staff.json';\r\nimport initialAircraft from '../data/initial-data/aircraft.json';\r\nimport initialMembers from '../data/initial-data/members.json';\r\nimport initialBookings from '../data/initial-data/bookings.json';\r\n\r\nconst STORAGE_KEYS = {\r\n  STAFF: 'aeroclub_staff',\r\n  AIRCRAFT: 'aeroclub_aircraft',\r\n  MEMBERS: 'aeroclub_members',\r\n  BOOKINGS: 'aeroclub_bookings',\r\n};\r\n\r\n// Initialize data from localStorage or initial data\r\nconst initializeData = (key, initialData) => {\r\n  const storedData = localStorage.getItem(key);\r\n  if (!storedData) {\r\n    localStorage.setItem(key, JSON.stringify(initialData));\r\n    return initialData;\r\n  }\r\n  return JSON.parse(storedData);\r\n};\r\n\r\n// Generic CRUD operations\r\nconst getData = (key) => {\r\n  return JSON.parse(localStorage.getItem(key));\r\n};\r\n\r\nconst setData = (key, data) => {\r\n  localStorage.setItem(key, JSON.stringify(data));\r\n};\r\n\r\n// Staff operations\r\nexport const getStaff = () => getData(STORAGE_KEYS.STAFF);\r\nexport const setStaff = (staff) => setData(STORAGE_KEYS.STAFF, staff);\r\nexport const updateStaffMember = (id, updates) => {\r\n  const staff = getStaff();\r\n  const updatedStaff = staff.map(member => \r\n    member.id === id ? { ...member, ...updates } : member\r\n  );\r\n  setStaff(updatedStaff);\r\n  return updatedStaff;\r\n};\r\n\r\n// Aircraft operations\r\nexport const getAircraft = () => getData(STORAGE_KEYS.AIRCRAFT);\r\nexport const setAircraft = (aircraft) => setData(STORAGE_KEYS.AIRCRAFT, aircraft);\r\nexport const updateAircraft = (id, updates) => {\r\n  const aircraft = getAircraft();\r\n  const updatedAircraft = aircraft.map(item => \r\n    item.id === id ? { ...item, ...updates } : item\r\n  );\r\n  setAircraft(updatedAircraft);\r\n  return updatedAircraft;\r\n};\r\n\r\n// Members operations\r\nexport const getMembers = () => getData(STORAGE_KEYS.MEMBERS);\r\nexport const setMembers = (members) => setData(STORAGE_KEYS.MEMBERS, members);\r\nexport const updateMember = (id, updates) => {\r\n  const members = getMembers();\r\n  const updatedMembers = members.map(member => \r\n    member.id === id ? { ...member, ...updates } : member\r\n  );\r\n  setMembers(updatedMembers);\r\n  return updatedMembers;\r\n};\r\n\r\n// Bookings operations\r\nexport const getBookings = () => getData(STORAGE_KEYS.BOOKINGS);\r\nexport const setBookings = (bookings) => setData(STORAGE_KEYS.BOOKINGS, bookings);\r\nexport const updateBooking = (id, updates) => {\r\n  const bookings = getBookings();\r\n  const updatedBookings = bookings.map(booking => \r\n    booking.id === id ? { ...booking, ...updates } : booking\r\n  );\r\n  setBookings(updatedBookings);\r\n  return updatedBookings;\r\n};\r\n\r\n// Initialize all data\r\nexport const initializeDatabase = () => {\r\n  initializeData(STORAGE_KEYS.STAFF, initialStaff);\r\n  initializeData(STORAGE_KEYS.AIRCRAFT, initialAircraft);\r\n  initializeData(STORAGE_KEYS.MEMBERS, initialMembers);\r\n  initializeData(STORAGE_KEYS.BOOKINGS, initialBookings);\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}