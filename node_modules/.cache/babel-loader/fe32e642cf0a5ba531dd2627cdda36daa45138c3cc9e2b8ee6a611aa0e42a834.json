{"ast":null,"code":"import React,{createContext,useState,useEffect,useContext}from'react';import*as db from'../services/mockDatabase';import{jsx as _jsx}from\"react/jsx-runtime\";const AppContext=/*#__PURE__*/createContext();export const AppProvider=_ref=>{let{children}=_ref;const[staffList,setStaffList]=useState([]);const[aircraftList,setAircraftList]=useState([]);const[membersList,setMembersList]=useState([]);const[bookings,setBookings]=useState([]);useEffect(()=>{// Initialize database on first load\ndb.initializeDatabase();// Load initial data\nsetStaffList(db.getStaff());setAircraftList(db.getAircraft());setMembersList(db.getMembers());setBookings(db.getBookings());},[]);// Update handlers\nconst updateStaff=newStaffList=>{db.setStaff(newStaffList);setStaffList(newStaffList);};const updateAircraft=newAircraftList=>{db.setAircraft(newAircraftList);setAircraftList(newAircraftList);};const updateMembers=newMembersList=>{db.setMembers(newMembersList);setMembersList(newMembersList);};const updateBookings=newBookings=>{db.setBookings(newBookings);setBookings(newBookings);};return/*#__PURE__*/_jsx(AppContext.Provider,{value:{staffList,setStaffList:updateStaff,aircraftList,setAircraftList:updateAircraft,membersList,setMembersList:updateMembers,bookings,setBookings:updateBookings},children:children});};export const useAppContext=()=>useContext(AppContext);","map":{"version":3,"names":["React","createContext","useState","useEffect","useContext","db","jsx","_jsx","AppContext","AppProvider","_ref","children","staffList","setStaffList","aircraftList","setAircraftList","membersList","setMembersList","bookings","setBookings","initializeDatabase","getStaff","getAircraft","getMembers","getBookings","updateStaff","newStaffList","setStaff","updateAircraft","newAircraftList","setAircraft","updateMembers","newMembersList","setMembers","updateBookings","newBookings","Provider","value","useAppContext"],"sources":["C:/Users/GGPC/aeroclub-bookings/src/context/AppContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect, useContext } from 'react';\r\nimport * as db from '../services/mockDatabase';\r\n\r\nconst AppContext = createContext();\r\n\r\nexport const AppProvider = ({ children }) => {\r\n  const [staffList, setStaffList] = useState([]);\r\n  const [aircraftList, setAircraftList] = useState([]);\r\n  const [membersList, setMembersList] = useState([]);\r\n  const [bookings, setBookings] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // Initialize database on first load\r\n    db.initializeDatabase();\r\n    \r\n    // Load initial data\r\n    setStaffList(db.getStaff());\r\n    setAircraftList(db.getAircraft());\r\n    setMembersList(db.getMembers());\r\n    setBookings(db.getBookings());\r\n  }, []);\r\n\r\n  // Update handlers\r\n  const updateStaff = (newStaffList) => {\r\n    db.setStaff(newStaffList);\r\n    setStaffList(newStaffList);\r\n  };\r\n\r\n  const updateAircraft = (newAircraftList) => {\r\n    db.setAircraft(newAircraftList);\r\n    setAircraftList(newAircraftList);\r\n  };\r\n\r\n  const updateMembers = (newMembersList) => {\r\n    db.setMembers(newMembersList);\r\n    setMembersList(newMembersList);\r\n  };\r\n\r\n  const updateBookings = (newBookings) => {\r\n    db.setBookings(newBookings);\r\n    setBookings(newBookings);\r\n  };\r\n\r\n  return (\r\n    <AppContext.Provider value={{\r\n      staffList,\r\n      setStaffList: updateStaff,\r\n      aircraftList,\r\n      setAircraftList: updateAircraft,\r\n      membersList,\r\n      setMembersList: updateMembers,\r\n      bookings,\r\n      setBookings: updateBookings,\r\n    }}>\r\n      {children}\r\n    </AppContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useAppContext = () => useContext(AppContext);"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,aAAa,CAAEC,QAAQ,CAAEC,SAAS,CAAEC,UAAU,KAAQ,OAAO,CAC7E,MAAO,GAAK,CAAAC,EAAE,KAAM,0BAA0B,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAE/C,KAAM,CAAAC,UAAU,cAAGP,aAAa,CAAC,CAAC,CAElC,MAAO,MAAM,CAAAQ,WAAW,CAAGC,IAAA,EAAkB,IAAjB,CAAEC,QAAS,CAAC,CAAAD,IAAA,CACtC,KAAM,CAACE,SAAS,CAAEC,YAAY,CAAC,CAAGX,QAAQ,CAAC,EAAE,CAAC,CAC9C,KAAM,CAACY,YAAY,CAAEC,eAAe,CAAC,CAAGb,QAAQ,CAAC,EAAE,CAAC,CACpD,KAAM,CAACc,WAAW,CAAEC,cAAc,CAAC,CAAGf,QAAQ,CAAC,EAAE,CAAC,CAClD,KAAM,CAACgB,QAAQ,CAAEC,WAAW,CAAC,CAAGjB,QAAQ,CAAC,EAAE,CAAC,CAE5CC,SAAS,CAAC,IAAM,CACd;AACAE,EAAE,CAACe,kBAAkB,CAAC,CAAC,CAEvB;AACAP,YAAY,CAACR,EAAE,CAACgB,QAAQ,CAAC,CAAC,CAAC,CAC3BN,eAAe,CAACV,EAAE,CAACiB,WAAW,CAAC,CAAC,CAAC,CACjCL,cAAc,CAACZ,EAAE,CAACkB,UAAU,CAAC,CAAC,CAAC,CAC/BJ,WAAW,CAACd,EAAE,CAACmB,WAAW,CAAC,CAAC,CAAC,CAC/B,CAAC,CAAE,EAAE,CAAC,CAEN;AACA,KAAM,CAAAC,WAAW,CAAIC,YAAY,EAAK,CACpCrB,EAAE,CAACsB,QAAQ,CAACD,YAAY,CAAC,CACzBb,YAAY,CAACa,YAAY,CAAC,CAC5B,CAAC,CAED,KAAM,CAAAE,cAAc,CAAIC,eAAe,EAAK,CAC1CxB,EAAE,CAACyB,WAAW,CAACD,eAAe,CAAC,CAC/Bd,eAAe,CAACc,eAAe,CAAC,CAClC,CAAC,CAED,KAAM,CAAAE,aAAa,CAAIC,cAAc,EAAK,CACxC3B,EAAE,CAAC4B,UAAU,CAACD,cAAc,CAAC,CAC7Bf,cAAc,CAACe,cAAc,CAAC,CAChC,CAAC,CAED,KAAM,CAAAE,cAAc,CAAIC,WAAW,EAAK,CACtC9B,EAAE,CAACc,WAAW,CAACgB,WAAW,CAAC,CAC3BhB,WAAW,CAACgB,WAAW,CAAC,CAC1B,CAAC,CAED,mBACE5B,IAAA,CAACC,UAAU,CAAC4B,QAAQ,EAACC,KAAK,CAAE,CAC1BzB,SAAS,CACTC,YAAY,CAAEY,WAAW,CACzBX,YAAY,CACZC,eAAe,CAAEa,cAAc,CAC/BZ,WAAW,CACXC,cAAc,CAAEc,aAAa,CAC7Bb,QAAQ,CACRC,WAAW,CAAEe,cACf,CAAE,CAAAvB,QAAA,CACCA,QAAQ,CACU,CAAC,CAE1B,CAAC,CAED,MAAO,MAAM,CAAA2B,aAAa,CAAGA,CAAA,GAAMlC,UAAU,CAACI,UAAU,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}